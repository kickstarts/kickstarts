#!/usr/bin/env node

// =====================================================
// Dependencies
// =====================================================

const Enquirer = require('enquirer')
const color    = require('ansi-colors')
const shell    = require('shelljs')
const program  = require('commander')

const package  = require('../package.json')

const enquirer = new Enquirer()

const PKG_NAME_VERSION = color.cyan(`${package.name} - ${package.version}`)

const TEMPLATES = [
  { name: 'Vanilla', message: 'Vanilla', value: 'ks-vanilla-js' },
  { name: 'React', message: 'React', value: 'ks-react' },
  { name: 'Angular', message: 'Angular', value: 'ks-angular' },
  { name: 'Vue', message: 'Vue', value: 'ks-vue' },
  { name: 'React Native', message: 'React Native', value: 'ks-rna' },
  { name: 'Ionic', message: 'Ionic', value: 'ks-ionic' },
  { name: 'Nest.js', message: 'Nest.js', value: 'ks-nestjs' },
]

const INPUTS = [
  {
    type: 'input',
    name: 'folder',
    initial: 'kickstart',
    message: 'Project name:'
  },
  {
    type: 'select',
    name: 'template',
    message: 'Select a kickstart:',
    choices: TEMPLATES
  }
];


// =====================================================
// Kickstart
// =====================================================

const kickstart = () => {
  const prompt = enquirer.prompt(INPUTS);

  prompt.then(result => {
    let root = handleFolderName(result.folder)
    let template = getRepositoryName(result.template)
    let prefix = 'ks'

    shell.echo('\n\n')
    shell.echo(color.cyanBright(`ðŸ“¦ Creating project in ${root}...`))
    shell.exec(`git clone https://github.com/kickstarts/${prefix}-${template} ${root} --quiet`)
    shell.echo(color.green('\nðŸŽ‰ All Done!'))
    shell.echo(color.bold.white('\nðŸš€ Now run:'))
    shell.echo(color.white('   npm install'))
    shell.echo(color.white('   npm run dev'))
    shell.echo('\n\n')
  })
}


// =====================================================
// CLI Commands
// =====================================================

// Version
program.version(PKG_NAME_VERSION, '-v, --version')

// Main Command
program
  .command('start')
  .description('kickstart a project')
  .action(kickstart)

// Help
program.on('-h, --help', () => console.log())

// Default
program.parse(process.argv)

if (process.argv.length === 2) {
  program.help()
}


// =====================================================
// Helpers
// =====================================================

const getRepositoryName = template => {
  switch (template) {
    case 'Vanilla': return 'vanilla-js'
    case 'React': return 'react'
    case 'Angular': return 'angular'
    case 'Vue': return 'vue'
    case 'React Native': return 'react-native'
    case 'Ionic': return 'ionic'
    case 'Nest.js': return 'nest-js'
  }
}

const handleFolderName = folder => {
  folder.toLowerCase().replace(' ', '-')
}
